C51 COMPILER V9.60.0.0   AULA3                                                             07/18/2022 13:23:25 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE AULA3
OBJECT MODULE PLACED IN .\Objects\aula3.obj
COMPILER INVOKED BY: D:\tools\C51\BIN\C51.EXE aula3.c OPTIMIZE(8,SIZE) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\aula3.
                    -lst) TABS(2) OBJECT(.\Objects\aula3.obj)

line level    source

   1          /********
   2          
   3          Alunos:
   4          Eneri D'Angelis (emd)
   5          Rafael Vasconcelos (rjav)
   6          
   7          *********/
   8          
   9          #include <REG51F.H>
  10          
  11          #define FrClk 12000000
  12          #define FreqTimer0_emHz 100
  13          #define CORRECAO 9
  14          #define TH0_Inicial ((65536-(FrClk/(12*FreqTimer0_emHz))+CORRECAO)>>8)
  15          #define TL0_Inicial ((65536-(FrClk/(12*FreqTimer0_emHz))+CORRECAO)&0xFF)
  16          
  17          sbit b0 = P2^0;
  18          sbit b1 = P2^1;
  19          
  20          int counter1;
  21          int counter2;
  22          
  23          void timer0_inicializa(){
  24   1        TR0 = 0;                  //Desliga Timer0
  25   1        TMOD = (TMOD & 0xF0)|0x01; //Timer 0 programado no Modo 1 (16 bits)
  26   1        TH0 = TH0_Inicial;          // Programa valor de contagem do Timer0
  27   1        TL0 = TL0_Inicial;
  28   1        ET0 = 1;                    // Habilita interrupcao do timer 0
  29   1        TR0 = 1;                    // Habilita contagem do timer 0
  30   1      }
  31          
  32          void timer0_int (void) interrupt 1 using 2 {
  33   1        TR0 = 0;              // Desliga Timer0
  34   1      TL0 += TL0_Inicial;   // Faz recarga da contagem do Timer0
  35   1        TH0 += TH0_Inicial + (unsigned char) CY;  
  36   1        TR0 = 1;      // Habilita contagem do timer 0
  37   1      counter1 ++;
  38   1      counter2 ++;
  39   1      }
  40          
  41          
  42          
  43          void watchingP0(){
  44   1      static char pEstado = 0x00;
  45   1      switch (pEstado){
  46   2      case  0x00: if (b0==0x01){ /* bit 0 de P2 passa de 0 -> 1*/
  47   3      P1 = (P1 & 0xF0) | (P0 & 0x0F);
  48   3      pEstado = 0x01;
  49   3      counter1 = 0;
  50   3      }
  51   2      break;
  52   2      case  0x01 : if(counter1 > 100){/* espera 1s */
  53   3      P1 = (P1 & 0xF0);
  54   3      pEstado = 0x02;
C51 COMPILER V9.60.0.0   AULA3                                                             07/18/2022 13:23:25 PAGE 2   

  55   3      }
  56   2      break;
  57   2      case  0x02 : if (b0==0x00){/* bit 0 de P2 passa de 1 -> 0*/
  58   3      pEstado = 0x00;
  59   3      }
  60   2      break;
  61   2      }
  62   1      }
  63          
  64          void watchingP1(){
  65   1      static char pEstado = 0x00;
  66   1      switch (pEstado){
  67   2      case  0x00: if (b1==0x01){ /* bit 0 de P2 passa de 0 -> 1*/
  68   3      P1 = (P0 & 0xF0) | (P1 & 0x0F);
  69   3      pEstado = 0x01;
  70   3      counter2 = 0;
  71   3      }
  72   2      break;
  73   2      case  0x01 : if (counter2 > 100){/* espera 1s */
  74   3      P1 = (P1 & 0x0F);
  75   3      pEstado = 0x02;
  76   3      }
  77   2      break;
  78   2      case  0x02 : if (b1==0x00){/* bit 0 de P2 passa de 1 -> 0*/
  79   3      pEstado = 0x00;
  80   3      }
  81   2      break;
  82   2      }
  83   1      }
  84          
  85          
  86          void main(){
  87   1      timer0_inicializa();
  88   1      EA=1; //Habilita o tratamento de interrupções
  89   1      while(1){
  90   2      watchingP0();
  91   2      watchingP1();
  92   2      }
  93   1      return;
  94   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    203    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
